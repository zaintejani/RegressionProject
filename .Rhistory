install.packages("RMySQL", type="source")
library(RMySQL)
install.packages("RMySQL", type="source")
install.packages("RMySQL", type="source")
install.packages("RMySQL", type="source")
getwd()
setwd("./Rdirectory")
getwd()
hist(runif(1000))
i<-1
for (i in 1 : 1000) {mns = c(mns, mean(runif(40)))
i<-i+1}
mns<-NULL
for (i in 1 : 1000) {mns = c(mns, mean(runif(40)))
i<-i+1}
hist(mns)
sd(mns)
1/40
sqrt(40)
1/sqrt(40)
var(mns)
var(runif(1000))
var(runif(1000))/40
var(runif(1000))/40
var(runif(1000))/40
var(runif(1000))/40
sqrt(var(runif(1000))/40)
sqrt(var(runif(1000))/40)
sqrt(var(runif(1000))/40)
x<-rexp(n=40,lambda=0.2)
?rexp
x<-rexp(n=40,rate=0.2)
hist(x)
mean(x)
var(x)
sd(x)
hist(rexp(n=1000))
hist(rexp(n=1000, rate=0.2))
xlab="count"
?plot
?hist
mean(s)
mean(x)
var(x)
sd(x)
25/sqrt(40)
var(x)/sqrt(40)
set.seed(5)
x<-rexp(n=40,rate=0.2)
set.seed(5)
y<-rexp(1000,rate=0.2)
hist(x, xlab="Count", main="Histogram of 40 exp(0.2)s.")
x<-rexp(40,0.2)
hist(x, xlab="Count", main="Histogram of 40 exp(0.2)s.")
x<-rexp(40,0.2)
hist(x, xlab="Count", main="Histogram of 40 exp(0.2)s.")
hist(x, xlab="Count", main="Histogram of 40 exp(0.2)s.")
x<-rexp(40,0.2)
x<-rexp(40,0.2)
hist(x, xlab="Count", main="Histogram of 40 exp(0.2)s.")
set.seed(10)
x<-rexp(40,0.2)
hist(x, xlab="Count", main="Histogram of 40 exp(0.2)s.")
x<-rexp(40,0.2)
y<-rexp(1000,rate=0.2)
hist(y)
hist(x)
x<-rexp(40,0.2)
hist(x)
x<-rexp(40,0.2)
hist(x)
mean(x)
var(x)
sd(x)
x<-rexp(40,0.2)
hist(x)
mean(x)
var(x)
sd(x)
hist(y)
mean(y)
var(y)
sd(y)
?mpar
?plot
?par
library(datasets)
data(ToothGrow)
data(toothgrow)
data(ToothGrowth)
class(ToothGrowth)
ToothGrowth[1:10,]
class(ToothGrowth$supp)
levels(Toothgrowth$supp)
levels(ToothGrowth$supp)
summary(ToothGrowth)
class(ToothGrowth$dose)
levels(as.factor(ToothGrowth$dose))
tg1<-ToothGrowth[ToothGrowth$Supp=="OJ",1]
tg1<-ToothGrowth[ToothGrowth$supp=="OJ",1]
tg2<-ToothGrowth[ToothGrowth$supp=="VC",1]
t.test(tg1,tg2, paired=true)
t.test(tg1,tg2, paired=TRUe)
t.test(tg1,tg2, paired=TRUE)
t.test(tg1,tg2, paired=FALSE)
?Toothgrowth
?ToothGrowth
t.test(tg1,tg2, paired=TRUE)
ToothGrowth[1:10,]
t.test(tg1,tg2, paired=TRUE)$mean
t.test(tg1,tg2, paired=TRUE)
t.test(tg1,tg2, paired=TRUE)$sample
t.test(tg1,tg2, paired=TRUE)$samp
e<-t.test(tg1,tg2, paired=TRUE)
class(e)
e[[9]]
e[[7]]
e[[6]]
e[[5]]
library(datasets)
data(mtcars)
class(mtcars)
colnames(mtcars)
class(colnames4gear)
class(colnames$gear)
class(mtcars$gear)
mtcars$gear[1:10]
class(mtcars$drat)
class(mtcars$qsec)
class(mtcars$carb)
?mtcars
mtcars$am
getwd()
setwd("./RegressionProject")
getwd()
lm(mpg~am, data=mtcars)
plot(lm(mpg~am, data=mtcars))
plot(lm(mpg~am+wt, data=mtcars))
lm(mpg~am+wt, data=mtcars)
colnames(wt)
colnames(mtcars)
plot(lm(mpg~wt, data=mtcars))
plot(lm(mpg~wt, data=mtcars))
lm(mpg~am, data=mtcars)
lm(mpg~am+wt+qsec, data=mtcars)
lm(mpg~am+wt, data=mtcars)
lm(mpg~am+wt+qsec, data=mtcars)
colnames(mtcars)
lm(mpg~am+wt+qsec+cyl, data=mtcars)
colnames(mtcars)
mtcars$vs
lm(mpg~am+wt+qsec+cyl+vs, data=mtcars)
lm(mpg~am+wt+qsec+cyl, data=mtcars)
lm(mpg~am+wt+qsec, data=mtcars)
lm(mpg~am+wt+qsec+cyl, data=mtcars)
summary(lm(mpg~am+wt+qsec+cyl, data=mtcars))
summary(lm(mpg~am+wt+qsec, data=mtcars))
colnames(mtcars)
lm(mpg~am+wt+qsec+disp, data=mtcars)
summary(lm(mpg~am+wt+qsec+disp, data=mtcars))
lm(mpg~am+wt+qsec+hp, data=mtcars)
summary(lm(mpg~am+wt+qsec+hp, data=mtcars))
summary(lm(mpg~am+wt+qsec+cyl, data=mtcars))
summary(lm(mpg~am+wt+qsec+disp, data=mtcars))
summary(lm(mpg~am+wt+qsec+carb, data=mtcars))
summary(lm(mpg~am+wt+qsec+gear, data=mtcars))
summary(lm(mpg~am+wt+qsec+gear+carb, data=mtcars))
summary(lm(mpg~am+wt+qsec, data=mtcars))
summary(lm(mpg~am+wt+qsec+hp, data=mtcars))
summary(lm(mpg~am+wt+qsec+drat, data=mtcars))
summary(lm(mpg~am+wt+qsec+vs, data=mtcars))
summary(lm(mpg~am+wt+qsec+hp+carb, data=mtcars))
```
summary(lm(mpg~am+wt+qsec+hp+carb, data=mtcars))$Coef
summary(lm(mpg~am+wt+qsec+hp+carb, data=mtcars))$coef
summary(lm(mpg~am+wt+qsec+hp, data=mtcars))
summary(lm(mpg~am+wt+qsec+carb, data=mtcars))$coef
summary(lm(mpg~am+wt+qsec+carb, data=mtcars))
summary(lm(mpg~am+wt+qsec+hp, data=mtcars))
summary(lm(mpg~am+wt+qsec+carb, data=mtcars))$resid
class(summary(lm(mpg~am+wt+qsec+carb, data=mtcars)))
summary(lm(mpg~am+wt+qsec+carb, data=mtcars))[[1]]
summary(lm(mpg~am+wt+qsec+carb, data=mtcars))[[2]]
summary(lm(mpg~am+wt+qsec+carb, data=mtcars))[[3]]
summary(lm(mpg~am+wt+qsec+carb, data=mtcars))[[4]]
summary(lm(mpg~am+wt+qsec+carb, data=mtcars))[[5]]
summary(lm(mpg~am+wt+qsec+carb, data=mtcars))[[6]]
summary(lm(mpg~am+wt+qsec+carb, data=mtcars))[[7]]
summary(lm(mpg~am+wt+qsec+carb, data=mtcars))[[8]]
summary(lm(mpg~am+wt+qsec+carb, data=mtcars))[[9]]
summary(lm(mpg~am+wt+qsec+carb, data=mtcars))
